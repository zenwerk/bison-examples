State 5 conflicts: 2 shift/reduce
State 9 conflicts: 2 shift/reduce
State 10 conflicts: 2 shift/reduce


Grammar

    0 $accept: s $end

    1 s: expr

    2 expr: expr '-' expr
    3     | expr '*' expr
    4     | '-' expr
    5     | NUMBER


Terminals, with rules where they appear

$end (0) 0
'*' (42) 3
'-' (45) 2 4
error (256)
NUMBER (258) 5


Nonterminals, with rules where they appear

$accept (6)
    on left: 0
s (7)
    on left: 1, on right: 0
expr (8)
    on left: 2 3 4 5, on right: 1 2 3 4


state 0

    0 $accept: . s $end

    NUMBER  shift, and go to state 1
    '-'     shift, and go to state 2

    s     go to state 3
    expr  go to state 4


state 1

    5 expr: NUMBER .

    $default  reduce using rule 5 (expr)


state 2

    4 expr: '-' . expr

    NUMBER  shift, and go to state 1
    '-'     shift, and go to state 2

    expr  go to state 5


state 3

    0 $accept: s . $end

    $end  shift, and go to state 6


state 4

    1 s: expr .
    2 expr: expr . '-' expr
    3     | expr . '*' expr

    '-'  shift, and go to state 7
    '*'  shift, and go to state 8

    $default  reduce using rule 1 (s)


state 5

    2 expr: expr . '-' expr
    3     | expr . '*' expr
    4     | '-' expr .

    '-'  shift, and go to state 7
    '*'  shift, and go to state 8

    '-'       [reduce using rule 4 (expr)]
    '*'       [reduce using rule 4 (expr)]
    $default  reduce using rule 4 (expr)


state 6

    0 $accept: s $end .

    $default  accept


state 7

    2 expr: expr '-' . expr

    NUMBER  shift, and go to state 1
    '-'     shift, and go to state 2

    expr  go to state 9


state 8

    3 expr: expr '*' . expr

    NUMBER  shift, and go to state 1
    '-'     shift, and go to state 2

    expr  go to state 10


state 9

    2 expr: expr . '-' expr
    2     | expr '-' expr .
    3     | expr . '*' expr

    '-'  shift, and go to state 7
    '*'  shift, and go to state 8

    '-'       [reduce using rule 2 (expr)]
    '*'       [reduce using rule 2 (expr)]
    $default  reduce using rule 2 (expr)


state 10

    2 expr: expr . '-' expr
    3     | expr . '*' expr
    3     | expr '*' expr .

    '-'  shift, and go to state 7
    '*'  shift, and go to state 8

    '-'       [reduce using rule 3 (expr)]
    '*'       [reduce using rule 3 (expr)]
    $default  reduce using rule 3 (expr)
