Grammar

    0 $accept: s $end

    1 s: expr '\n'

    2 expr: '(' expr ')'
    3     | expr '+'
    4     | expr expr
    5     | expr '|' expr
    6     | CHAR


Terminals, with rules where they appear

$end (0) 0
'\n' (10) 1
'(' (40) 2
')' (41) 2
'+' (43) 3
'|' (124) 5
error (256)
CHAR (258) 6
CAT (259)


Nonterminals, with rules where they appear

$accept (10)
    on left: 0
s (11)
    on left: 1, on right: 0
expr (12)
    on left: 2 3 4 5 6, on right: 1 2 3 4 5


state 0

    0 $accept: . s $end

    '('   shift, and go to state 1
    CHAR  shift, and go to state 2

    s     go to state 3
    expr  go to state 4


state 1

    2 expr: '(' . expr ')'

    '('   shift, and go to state 1
    CHAR  shift, and go to state 2

    expr  go to state 5


state 2

    6 expr: CHAR .

    $default  reduce using rule 6 (expr)


state 3

    0 $accept: s . $end

    $end  shift, and go to state 6


state 4

    1 s: expr . '\n'
    3 expr: expr . '+'
    4     | expr . expr
    5     | expr . '|' expr

    '|'   shift, and go to state 7
    '('   shift, and go to state 1
    CHAR  shift, and go to state 2
    '+'   shift, and go to state 8
    '\n'  shift, and go to state 9

    expr  go to state 10


state 5

    2 expr: '(' expr . ')'
    3     | expr . '+'
    4     | expr . expr
    5     | expr . '|' expr

    '|'   shift, and go to state 7
    '('   shift, and go to state 1
    CHAR  shift, and go to state 2
    '+'   shift, and go to state 8
    ')'   shift, and go to state 11

    expr  go to state 10


state 6

    0 $accept: s $end .

    $default  accept


state 7

    5 expr: expr '|' . expr

    '('   shift, and go to state 1
    CHAR  shift, and go to state 2

    expr  go to state 12


state 8

    3 expr: expr '+' .

    $default  reduce using rule 3 (expr)


state 9

    1 s: expr '\n' .

    $default  reduce using rule 1 (s)


state 10

    3 expr: expr . '+'
    4     | expr . expr
    4     | expr expr .
    5     | expr . '|' expr

    '+'  shift, and go to state 8

    $default  reduce using rule 4 (expr)

    expr  go to state 10


state 11

    2 expr: '(' expr ')' .

    $default  reduce using rule 2 (expr)


state 12

    3 expr: expr . '+'
    4     | expr . expr
    5     | expr . '|' expr
    5     | expr '|' expr .

    '('   shift, and go to state 1
    CHAR  shift, and go to state 2
    '+'   shift, and go to state 8

    $default  reduce using rule 5 (expr)

    expr  go to state 10
